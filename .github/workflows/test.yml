name: Run tests
on:
  push:
    branches: [ main, beta ]
  workflow_dispatch:
  pull_request:
    branches:  [ main, beta ]
    types: [ opened, reopened, synchronize ]

permissions:
  contents: read # for checkout

jobs:
  eth-based-chain-test:
    name: ETH-based Chain Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: yarn install
      - name: Build
        run: |
          yarn types
          yarn build
          yarn test:build

  setup-l2-server-and-run-tests:
    name: Setup L2 server and run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      - name: Install build deps
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install Foundry (anvil)
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
          cache: true

      - name: Clone zksync-os-server
        run: |
          # use HTTPS to avoid SSH key setup on the runner
          git clone https://github.com/matter-labs/zksync-os-server.git

      - name: Start Anvil (L1) with saved state
        working-directory: zksync-os-server
        run: |
          nohup anvil --load-state zkos-l1-state.json --host 0.0.0.0 --port 8545 > anvil.log 2>&1 &
          # wait until RPC responds
          for i in {1..30}; do
            if curl -s http://127.0.0.1:8545 > /dev/null; then
              echo "Anvil is up"
              break
            fi
            sleep 1
          done

      - name: Run L2 server
        working-directory: zksync-os-server
        run: |
          cargo run
          # wait until RPC responds
          for i in {1..30}; do
            if curl -s http://127.0.0.1:3050 > /dev/null; then
              echo "L2 server is up"
              break
            fi
            sleep 1
          done

      - name: Run tests
        run: |
          yarn test:prepare
          yarn test