"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IL1NativeTokenVault__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "bridgedTokenBeacon",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "bridgedTokenProxyBytecodeHash",
                type: "bytes32",
            },
        ],
        name: "BridgedTokenBeaconUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "l2TokenBeacon",
                type: "address",
            },
        ],
        name: "TokenBeaconUpdated",
        type: "event",
    },
    {
        inputs: [],
        name: "ASSET_ROUTER",
        outputs: [
            {
                internalType: "contract IAssetRouterBase",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "L1_NULLIFIER",
        outputs: [
            {
                internalType: "contract IL1Nullifier",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "WETH_TOKEN",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
        ],
        name: "assetId",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_chainId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_tokenAddress",
                type: "address",
            },
        ],
        name: "calculateAssetId",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_originChainId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_originToken",
                type: "address",
            },
        ],
        name: "calculateCreate2TokenAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_chainId",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_assetId",
                type: "bytes32",
            },
        ],
        name: "chainBalance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_originChainId",
                type: "uint256",
            },
        ],
        name: "getERC20Getters",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "assetId",
                type: "bytes32",
            },
        ],
        name: "originChainId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "registerEthToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_l1Token",
                type: "address",
            },
        ],
        name: "registerToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "assetId",
                type: "bytes32",
            },
        ],
        name: "tokenAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class IL1NativeTokenVault__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IL1NativeTokenVault__factory = IL1NativeTokenVault__factory;
IL1NativeTokenVault__factory.abi = _abi;
//# sourceMappingURL=IL1NativeTokenVault__factory.js.map