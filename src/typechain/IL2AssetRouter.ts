/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export interface IL2AssetRouterInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "BRIDGE_HUB"
      | "L1_ASSET_ROUTER"
      | "assetHandlerAddress"
      | "finalizeDeposit"
      | "finalizeDepositLegacyBridge"
      | "setAssetHandlerAddress"
      | "setAssetHandlerAddressThisChain"
      | "setLegacyTokenAssetHandler"
      | "withdraw"
      | "withdrawLegacyBridge"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "AssetDeploymentTrackerRegistered"
      | "AssetHandlerRegistered"
      | "BridgehubDepositBaseTokenInitiated"
      | "BridgehubDepositInitiated"
      | "BridgehubWithdrawalInitiated"
      | "DepositFinalizedAssetRouter"
      | "WithdrawalInitiatedAssetRouter"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "BRIDGE_HUB",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "L1_ASSET_ROUTER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "assetHandlerAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeDeposit",
    values: [BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeDepositLegacyBridge",
    values: [AddressLike, AddressLike, AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setAssetHandlerAddress",
    values: [BigNumberish, BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setAssetHandlerAddressThisChain",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setLegacyTokenAssetHandler",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawLegacyBridge",
    values: [AddressLike, AddressLike, BigNumberish, AddressLike]
  ): string;

  decodeFunctionResult(functionFragment: "BRIDGE_HUB", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "L1_ASSET_ROUTER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetHandlerAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalizeDeposit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalizeDepositLegacyBridge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAssetHandlerAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAssetHandlerAddressThisChain",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLegacyTokenAssetHandler",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawLegacyBridge",
    data: BytesLike
  ): Result;
}

export namespace AssetDeploymentTrackerRegisteredEvent {
  export type InputTuple = [
    assetId: BytesLike,
    additionalData: BytesLike,
    assetDeploymentTracker: AddressLike
  ];
  export type OutputTuple = [
    assetId: string,
    additionalData: string,
    assetDeploymentTracker: string
  ];
  export interface OutputObject {
    assetId: string;
    additionalData: string;
    assetDeploymentTracker: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AssetHandlerRegisteredEvent {
  export type InputTuple = [
    assetId: BytesLike,
    _assetHandlerAddress: AddressLike
  ];
  export type OutputTuple = [assetId: string, _assetHandlerAddress: string];
  export interface OutputObject {
    assetId: string;
    _assetHandlerAddress: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BridgehubDepositBaseTokenInitiatedEvent {
  export type InputTuple = [
    chainId: BigNumberish,
    from: AddressLike,
    assetId: BytesLike,
    amount: BigNumberish
  ];
  export type OutputTuple = [
    chainId: bigint,
    from: string,
    assetId: string,
    amount: bigint
  ];
  export interface OutputObject {
    chainId: bigint;
    from: string;
    assetId: string;
    amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BridgehubDepositInitiatedEvent {
  export type InputTuple = [
    chainId: BigNumberish,
    txDataHash: BytesLike,
    from: AddressLike,
    assetId: BytesLike,
    bridgeMintCalldata: BytesLike
  ];
  export type OutputTuple = [
    chainId: bigint,
    txDataHash: string,
    from: string,
    assetId: string,
    bridgeMintCalldata: string
  ];
  export interface OutputObject {
    chainId: bigint;
    txDataHash: string;
    from: string;
    assetId: string;
    bridgeMintCalldata: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BridgehubWithdrawalInitiatedEvent {
  export type InputTuple = [
    chainId: BigNumberish,
    sender: AddressLike,
    assetId: BytesLike,
    assetDataHash: BytesLike
  ];
  export type OutputTuple = [
    chainId: bigint,
    sender: string,
    assetId: string,
    assetDataHash: string
  ];
  export interface OutputObject {
    chainId: bigint;
    sender: string;
    assetId: string;
    assetDataHash: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DepositFinalizedAssetRouterEvent {
  export type InputTuple = [
    chainId: BigNumberish,
    assetId: BytesLike,
    assetData: BytesLike
  ];
  export type OutputTuple = [
    chainId: bigint,
    assetId: string,
    assetData: string
  ];
  export interface OutputObject {
    chainId: bigint;
    assetId: string;
    assetData: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace WithdrawalInitiatedAssetRouterEvent {
  export type InputTuple = [
    chainId: BigNumberish,
    l2Sender: AddressLike,
    assetId: BytesLike,
    assetData: BytesLike
  ];
  export type OutputTuple = [
    chainId: bigint,
    l2Sender: string,
    assetId: string,
    assetData: string
  ];
  export interface OutputObject {
    chainId: bigint;
    l2Sender: string;
    assetId: string;
    assetData: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface IL2AssetRouter extends BaseContract {
  connect(runner?: ContractRunner | null): IL2AssetRouter;
  waitForDeployment(): Promise<this>;

  interface: IL2AssetRouterInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  BRIDGE_HUB: TypedContractMethod<[], [string], "view">;

  L1_ASSET_ROUTER: TypedContractMethod<[], [string], "view">;

  assetHandlerAddress: TypedContractMethod<
    [_assetId: BytesLike],
    [string],
    "view"
  >;

  finalizeDeposit: TypedContractMethod<
    [_chainId: BigNumberish, _assetId: BytesLike, _transferData: BytesLike],
    [void],
    "payable"
  >;

  finalizeDepositLegacyBridge: TypedContractMethod<
    [
      _l1Sender: AddressLike,
      _l2Receiver: AddressLike,
      _l1Token: AddressLike,
      _amount: BigNumberish,
      _data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  setAssetHandlerAddress: TypedContractMethod<
    [
      _originChainId: BigNumberish,
      _assetId: BytesLike,
      _assetHandlerAddress: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  setAssetHandlerAddressThisChain: TypedContractMethod<
    [_assetRegistrationData: BytesLike, _assetHandlerAddress: AddressLike],
    [void],
    "nonpayable"
  >;

  setLegacyTokenAssetHandler: TypedContractMethod<
    [_assetId: BytesLike],
    [void],
    "nonpayable"
  >;

  withdraw: TypedContractMethod<
    [_assetId: BytesLike, _transferData: BytesLike],
    [string],
    "nonpayable"
  >;

  withdrawLegacyBridge: TypedContractMethod<
    [
      _l1Receiver: AddressLike,
      _l2Token: AddressLike,
      _amount: BigNumberish,
      _sender: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "BRIDGE_HUB"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "L1_ASSET_ROUTER"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "assetHandlerAddress"
  ): TypedContractMethod<[_assetId: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "finalizeDeposit"
  ): TypedContractMethod<
    [_chainId: BigNumberish, _assetId: BytesLike, _transferData: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "finalizeDepositLegacyBridge"
  ): TypedContractMethod<
    [
      _l1Sender: AddressLike,
      _l2Receiver: AddressLike,
      _l1Token: AddressLike,
      _amount: BigNumberish,
      _data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setAssetHandlerAddress"
  ): TypedContractMethod<
    [
      _originChainId: BigNumberish,
      _assetId: BytesLike,
      _assetHandlerAddress: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setAssetHandlerAddressThisChain"
  ): TypedContractMethod<
    [_assetRegistrationData: BytesLike, _assetHandlerAddress: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setLegacyTokenAssetHandler"
  ): TypedContractMethod<[_assetId: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "withdraw"
  ): TypedContractMethod<
    [_assetId: BytesLike, _transferData: BytesLike],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "withdrawLegacyBridge"
  ): TypedContractMethod<
    [
      _l1Receiver: AddressLike,
      _l2Token: AddressLike,
      _amount: BigNumberish,
      _sender: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "AssetDeploymentTrackerRegistered"
  ): TypedContractEvent<
    AssetDeploymentTrackerRegisteredEvent.InputTuple,
    AssetDeploymentTrackerRegisteredEvent.OutputTuple,
    AssetDeploymentTrackerRegisteredEvent.OutputObject
  >;
  getEvent(
    key: "AssetHandlerRegistered"
  ): TypedContractEvent<
    AssetHandlerRegisteredEvent.InputTuple,
    AssetHandlerRegisteredEvent.OutputTuple,
    AssetHandlerRegisteredEvent.OutputObject
  >;
  getEvent(
    key: "BridgehubDepositBaseTokenInitiated"
  ): TypedContractEvent<
    BridgehubDepositBaseTokenInitiatedEvent.InputTuple,
    BridgehubDepositBaseTokenInitiatedEvent.OutputTuple,
    BridgehubDepositBaseTokenInitiatedEvent.OutputObject
  >;
  getEvent(
    key: "BridgehubDepositInitiated"
  ): TypedContractEvent<
    BridgehubDepositInitiatedEvent.InputTuple,
    BridgehubDepositInitiatedEvent.OutputTuple,
    BridgehubDepositInitiatedEvent.OutputObject
  >;
  getEvent(
    key: "BridgehubWithdrawalInitiated"
  ): TypedContractEvent<
    BridgehubWithdrawalInitiatedEvent.InputTuple,
    BridgehubWithdrawalInitiatedEvent.OutputTuple,
    BridgehubWithdrawalInitiatedEvent.OutputObject
  >;
  getEvent(
    key: "DepositFinalizedAssetRouter"
  ): TypedContractEvent<
    DepositFinalizedAssetRouterEvent.InputTuple,
    DepositFinalizedAssetRouterEvent.OutputTuple,
    DepositFinalizedAssetRouterEvent.OutputObject
  >;
  getEvent(
    key: "WithdrawalInitiatedAssetRouter"
  ): TypedContractEvent<
    WithdrawalInitiatedAssetRouterEvent.InputTuple,
    WithdrawalInitiatedAssetRouterEvent.OutputTuple,
    WithdrawalInitiatedAssetRouterEvent.OutputObject
  >;

  filters: {
    "AssetDeploymentTrackerRegistered(bytes32,bytes32,address)": TypedContractEvent<
      AssetDeploymentTrackerRegisteredEvent.InputTuple,
      AssetDeploymentTrackerRegisteredEvent.OutputTuple,
      AssetDeploymentTrackerRegisteredEvent.OutputObject
    >;
    AssetDeploymentTrackerRegistered: TypedContractEvent<
      AssetDeploymentTrackerRegisteredEvent.InputTuple,
      AssetDeploymentTrackerRegisteredEvent.OutputTuple,
      AssetDeploymentTrackerRegisteredEvent.OutputObject
    >;

    "AssetHandlerRegistered(bytes32,address)": TypedContractEvent<
      AssetHandlerRegisteredEvent.InputTuple,
      AssetHandlerRegisteredEvent.OutputTuple,
      AssetHandlerRegisteredEvent.OutputObject
    >;
    AssetHandlerRegistered: TypedContractEvent<
      AssetHandlerRegisteredEvent.InputTuple,
      AssetHandlerRegisteredEvent.OutputTuple,
      AssetHandlerRegisteredEvent.OutputObject
    >;

    "BridgehubDepositBaseTokenInitiated(uint256,address,bytes32,uint256)": TypedContractEvent<
      BridgehubDepositBaseTokenInitiatedEvent.InputTuple,
      BridgehubDepositBaseTokenInitiatedEvent.OutputTuple,
      BridgehubDepositBaseTokenInitiatedEvent.OutputObject
    >;
    BridgehubDepositBaseTokenInitiated: TypedContractEvent<
      BridgehubDepositBaseTokenInitiatedEvent.InputTuple,
      BridgehubDepositBaseTokenInitiatedEvent.OutputTuple,
      BridgehubDepositBaseTokenInitiatedEvent.OutputObject
    >;

    "BridgehubDepositInitiated(uint256,bytes32,address,bytes32,bytes)": TypedContractEvent<
      BridgehubDepositInitiatedEvent.InputTuple,
      BridgehubDepositInitiatedEvent.OutputTuple,
      BridgehubDepositInitiatedEvent.OutputObject
    >;
    BridgehubDepositInitiated: TypedContractEvent<
      BridgehubDepositInitiatedEvent.InputTuple,
      BridgehubDepositInitiatedEvent.OutputTuple,
      BridgehubDepositInitiatedEvent.OutputObject
    >;

    "BridgehubWithdrawalInitiated(uint256,address,bytes32,bytes32)": TypedContractEvent<
      BridgehubWithdrawalInitiatedEvent.InputTuple,
      BridgehubWithdrawalInitiatedEvent.OutputTuple,
      BridgehubWithdrawalInitiatedEvent.OutputObject
    >;
    BridgehubWithdrawalInitiated: TypedContractEvent<
      BridgehubWithdrawalInitiatedEvent.InputTuple,
      BridgehubWithdrawalInitiatedEvent.OutputTuple,
      BridgehubWithdrawalInitiatedEvent.OutputObject
    >;

    "DepositFinalizedAssetRouter(uint256,bytes32,bytes)": TypedContractEvent<
      DepositFinalizedAssetRouterEvent.InputTuple,
      DepositFinalizedAssetRouterEvent.OutputTuple,
      DepositFinalizedAssetRouterEvent.OutputObject
    >;
    DepositFinalizedAssetRouter: TypedContractEvent<
      DepositFinalizedAssetRouterEvent.InputTuple,
      DepositFinalizedAssetRouterEvent.OutputTuple,
      DepositFinalizedAssetRouterEvent.OutputObject
    >;

    "WithdrawalInitiatedAssetRouter(uint256,address,bytes32,bytes)": TypedContractEvent<
      WithdrawalInitiatedAssetRouterEvent.InputTuple,
      WithdrawalInitiatedAssetRouterEvent.OutputTuple,
      WithdrawalInitiatedAssetRouterEvent.OutputObject
    >;
    WithdrawalInitiatedAssetRouter: TypedContractEvent<
      WithdrawalInitiatedAssetRouterEvent.InputTuple,
      WithdrawalInitiatedAssetRouterEvent.OutputTuple,
      WithdrawalInitiatedAssetRouterEvent.OutputObject
    >;
  };
}
